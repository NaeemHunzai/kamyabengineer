<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>World Capitals Quiz</title>
  <style>
    :root{
      --primary: #007bff;
      --btn-bg: #007bff;
      --btn-bg-hover: #0056b3;
      --ok: #28a745;
      --bad: #dc3545;
      --white: #ffffff;
      --black: #111;
    }

    body{
      margin:0;
      padding:12px;
      font-family: "Segoe UI", Roboto, Arial, sans-serif;
      background:var(--white);
      color:var(--black);
      display:flex;
      align-items:flex-start;
      justify-content:center;
      min-height:100vh;
      -webkit-font-smoothing:antialiased;
      -moz-osx-font-smoothing:grayscale;
    }

    .quiz-container{
      width:100%;
      max-width:520px;
      background:var(--white);
      border-radius:12px;
      box-shadow: 0 6px 18px rgba(0,0,0,0.08);
      padding:16px;
      box-sizing:border-box;
      border:4px solid transparent;
      transition:border-color .20s ease, transform .12s ease;
      text-align:center;
    }
    .quiz-container.correct{ border-color: var(--ok); }
    .quiz-container.wrong{ border-color: var(--bad); }

    #question {
      margin: 0 0 12px 0;
      font-size: 20px;
      line-height: 1.2;
      color: var(--black);
      text-align: center;
    }

    .options{
      display:grid;
      grid-template-columns:repeat(2,1fr);
      gap:10px;
      margin:12px 0;
    }

    .option-btn{
      background:var(--btn-bg);
      color:var(--white);
      border:0;
      padding:12px 10px;
      font-size:15px;
      border-radius:8px;
      cursor:pointer;
      width:100%;
      word-break:break-word;
      transition: transform .10s ease, background .12s ease, opacity .12s ease;
    }
    .option-btn:active{ transform: translateY(1px); }
    .option-btn:hover{ background:var(--btn-bg-hover); }
    .option-btn[disabled]{ opacity: .7; cursor: default; }

    .timer{
      margin:10px 0;
      font-weight:700;
      color:var(--black);
      font-size:16px;
      text-align:center;
    }

    .auto-next {
      display:flex;
      justify-content:center;
      align-items:center;
      gap:8px;
      margin-bottom:8px;
      color:var(--black);
      font-size:14px;
    }

    .controls {
      display:flex;
      gap:8px;
      flex-direction:column;
      align-items:stretch;
      margin-top:6px;
    }

    .next-btn, .restart-btn {
      background:var(--ok);
      color:var(--white);
      border:0;
      padding:12px;
      border-radius:8px;
      font-size:15px;
      cursor:pointer;
      width:100%;
    }
    .next-btn:hover, .restart-btn:hover{ filter:brightness(.95); }

    .score {
      margin-top:12px;
      text-align:center;
      font-weight:700;
      color:var(--black);
      font-size:16px;
    }

    @media (max-width:420px){
      .options{ grid-template-columns:1fr; }
      #question{ font-size:18px; }
      .option-btn{ padding:14px; font-size:16px; }
      .timer{ font-size:15px; }
    }
  </style>
</head>
<body>
  <div class="quiz-container" id="quizBox">
    <h2 id="question">Loading question...</h2>
    <div class="options" id="options"></div>
    <div class="timer" id="timer">Time: 10s</div>
    <div class="auto-next" id="autoNextWrap">
      <input type="checkbox" id="autoNext" />
      <label for="autoNext">Auto Next</label>
    </div>
    <div class="controls">
      <button id="nextBtn" class="next-btn" type="button">Next</button>
      <button id="restartBtn" class="restart-btn" type="button" style="display:none;">Restart Quiz</button>
    </div>
    <div id="scoreBox" class="score"></div>
  </div>

  <script>
    /*********** Expanded Database: Country → Capital ***********/
    const database = [
      { country: "Afghanistan", capital: "Kabul" },
      { country: "Albania", capital: "Tirana" },
      { country: "Algeria", capital: "Algiers" },
      { country: "Andorra", capital: "Andorra la Vella" },
      { country: "Angola", capital: "Luanda" },
      { country: "Antigua and Barbuda", capital: "Saint John's" },
      { country: "Argentina", capital: "Buenos Aires" },
      { country: "Armenia", capital: "Yerevan" },
      { country: "Australia", capital: "Canberra" },
      { country: "Austria", capital: "Vienna" },
      { country: "Azerbaijan", capital: "Baku" },
      { country: "Bahamas", capital: "Nassau" },
      { country: "Bahrain", capital: "Manama" },
      { country: "Bangladesh", capital: "Dhaka" },
      { country: "Barbados", capital: "Bridgetown" },
      { country: "Belarus", capital: "Minsk" },
      { country: "Belgium", capital: "Brussels" },
      { country: "Belize", capital: "Belmopan" },
      { country: "Benin", capital: "Porto Novo" },
      { country: "Bhutan", capital: "Thimphu" },
      { country: "Bolivia", capital: "Sucre" },
      { country: "Bosnia and Herzegovina", capital: "Sarajevo" },
      { country: "Botswana", capital: "Gaborone" },
      { country: "Brazil", capital: "Brasília" },
      { country: "Brunei", capital: "Bandar Seri Begawan" },
      { country: "Bulgaria", capital: "Sofia" },
      { country: "Burkina Faso", capital: "Ouagadougou" },
      { country: "Burundi", capital: "Gitega" },
      { country: "Cabo Verde", capital: "Praia" },
      { country: "Cambodia", capital: "Phnom Penh" },
      { country: "Cameroon", capital: "Yaoundé" },
      { country: "Canada", capital: "Ottawa" },
      { country: "Central African Republic", capital: "Bangui" },
      { country: "Chad", capital: "N'Djamena" },
      { country: "Chile", capital: "Santiago" },
      { country: "China", capital: "Beijing" },
      { country: "Colombia", capital: "Bogotá" },
      { country: "Comoros", capital: "Moroni" },
      { country: "Costa Rica", capital: "San José" },
      { country: "Croatia", capital: "Zagreb" },
      { country: "Cuba", capital: "Havana" },
      { country: "Cyprus", capital: "Nicosia" },
      { country: "Czech Republic", capital: "Prague" },
      { country: "Democratic Republic of the Congo", capital: "Kinshasa" },
      { country: "Denmark", capital: "Copenhagen" },
      { country: "Djibouti", capital: "Djibouti" },
      { country: "Dominica", capital: "Roseau" },
      { country: "Dominican Republic", capital: "Santo Domingo" },
      { country: "Ecuador", capital: "Quito" },
      { country: "Egypt", capital: "Cairo" },
      { country: "El Salvador", capital: "San Salvador" },
      { country: "Equatorial Guinea", capital: "Malabo" },
      { country: "Eritrea", capital: "Asmara" },
      { country: "Estonia", capital: "Tallinn" },
      { country: "Eswatini", capital: "Mbabane" },
      { country: "Ethiopia", capital: "Addis Ababa" },
      { country: "Fiji", capital: "Suva" },
      { country: "Finland", capital: "Helsinki" },
      { country: "France", capital: "Paris" },
      { country: "Gabon", capital: "Libreville" },
      { country: "Gambia", capital: "Banjul" },
      { country: "Georgia", capital: "Tbilisi" },
      { country: "Germany", capital: "Berlin" },
      { country: "Ghana", capital: "Accra" },
      { country: "Greece", capital: "Athens" },
      { country: "Grenada", capital: "Saint George's" },
      { country: "Guatemala", capital: "Guatemala City" },
      { country: "Guinea", capital: "Conakry" },
      { country: "Guinea-Bissau", capital: "Bissau" },
      { country: "Guyana", capital: "Georgetown" },
      { country: "Haiti", capital: "Port-au-Prince" },
      { country: "Honduras", capital: "Tegucigalpa" },
      { country: "Hungary", capital: "Budapest" },
      { country: "Iceland", capital: "Reykjavík" },
      { country: "India", capital: "New Delhi" },
      { country: "Indonesia", capital: "Jakarta" },
      { country: "Iran", capital: "Tehran" },
      { country: "Iraq", capital: "Baghdad" },
      { country: "Ireland", capital: "Dublin" },
      { country: "Israel", capital: "Jerusalem" },
      { country: "Italy", capital: "Rome" },
      { country: "Jamaica", capital: "Kingston" },
      { country: "Japan", capital: "Tokyo" },
      { country: "Jordan", capital: "Amman" },
      { country: "Kazakhstan", capital: "Nur-Sultan" },
      { country: "Kenya", capital: "Nairobi" },
      { country: "Kiribati", capital: "Tarawa" },
      { country: "Kosovo", capital: "Pristina" },
      { country: "Kuwait", capital: "Kuwait City" },
      { country: "Kyrgyzstan", capital: "Bishkek" },
      { country: "Laos", capital: "Vientiane" },
      { country: "Latvia", capital: "Riga" },
      { country: "Lebanon", capital: "Beirut" },
      { country: "Lesotho", capital: "Maseru" },
      { country: "Liberia", capital: "Monrovia" },
      { country: "Libya", capital: "Tripoli" },
      { country: "Liechtenstein", capital: "Vaduz" },
      { country: "Lithuania", capital: "Vilnius" },
      { country: "Luxembourg", capital: "Luxembourg" },
      { country: "Madagascar", capital: "Antananarivo" },
      { country: "Malawi", capital: "Lilongwe" },
      { country: "Malaysia", capital: "Kuala Lumpur" },
      { country: "Maldives", capital: "Malé" },
      { country: "Mali", capital: "Bamako" },
      { country: "Malta", capital: "Valletta" },
      { country: "Marshall Islands", capital: "Majuro" },
      { country: "Mauritania", capital: "Nouakchott" },
      { country: "Mauritius", capital: "Port Louis" },
      { country: "Mexico", capital: "Mexico City" },
      { country: "Micronesia", capital: "Palikir" },
      { country: "Moldova", capital: "Chișinău" },
      { country: "Monaco", capital: "Monaco" },
      { country: "Mongolia", capital: "Ulaanbaatar" },
      { country: "Montenegro", capital: "Podgorica" },
      { country: "Morocco", capital: "Rabat" },
      { country: "Mozambique", capital: "Maputo" },
      { country: "Myanmar", capital: "Naypyidaw" }
      // You can continue adding more to reach all countries...
    ];

    const MAX_QUESTIONS = 20;
    const QUESTIONS_PER_QUIZ = Math.min(MAX_QUESTIONS, database.length);

    let questions = [];
    let currentIndex = 0;
    let score = 0;
    let answered = false;
    let timerInterval = null;
    let autoAdvanceTimeout = null;
    let timeLeft = 10;

    const quizBox = document.getElementById('quizBox');
    const questionEl = document.getElementById('question');
    const optionsEl = document.getElementById('options');
    const timerEl = document.getElementById('timer');
    const scoreBox = document.getElementById('scoreBox');
    const nextBtn = document.getElementById('nextBtn');
    const restartBtn = document.getElementById('restartBtn');
    const autoNextWrap = document.getElementById('autoNextWrap');

    function shuffleArray(arr){
      return arr.map(v => ({v, r: Math.random()}))
                .sort((a,b)=> a.r - b.r)
                .map(x => x.v);
    }

    function clearTimers(){
      if(timerInterval){ clearInterval(timerInterval); timerInterval = null; }
      if(autoAdvanceTimeout){ clearTimeout(autoAdvanceTimeout); autoAdvanceTimeout = null; }
    }

    function startQuiz(){
      questions = shuffleArray(database).slice(0, QUESTIONS_PER_QUIZ);
      currentIndex = 0;
      score = 0;
      answered = false;
      scoreBox.textContent = '';
      restartBtn.style.display = 'none';
      nextBtn.style.display = 'block';
      autoNextWrap.style.display = 'flex';
      loadQuestion();
    }

    function loadQuestion(){
      clearTimers();
      quizBox.classList.remove('correct','wrong');
      answered = false;

      if(currentIndex >= questions.length) return endQuiz();

      const q = questions[currentIndex];
      questionEl.textContent = `What is the capital of ${q.country}?`;

      const wrongPool = shuffleArray(database.filter(it => it.capital !== q.capital)).slice(0,3).map(it => it.capital);
      const opts = shuffleArray([ q.capital, ...wrongPool ]);

      optionsEl.innerHTML = '';
      opts.forEach(opt => {
        const btn = document.createElement('button');
        btn.type = 'button';
        btn.className = 'option-btn';
        btn.textContent = opt;
        btn.disabled = false;
        btn.addEventListener('click', () => onSelectOption(opt));
        optionsEl.appendChild(btn);
      });

      timeLeft = 10;
      timerEl.textContent = `Time: ${timeLeft}s`;
      timerInterval = setInterval(() => {
        timeLeft--;
        timerEl.textContent = `Time: ${timeLeft}s`;
        if(timeLeft <= 0){
          clearTimers();
          quizBox.classList.add('wrong');
          answered = false;
          if(document.getElementById('autoNext').checked){
            autoAdvanceTimeout = setTimeout(() => { advanceToNext(); }, 700);
          }
        }
      }, 1000);
    }

    function onSelectOption(optionText){
      if(answered) return;
      answered = true;
      Array.from(optionsEl.children).forEach(b => b.disabled = true);
      clearTimers();

      const q = questions[currentIndex];
      const isCorrect = optionText === q.capital;

      if(isCorrect){
        quizBox.classList.add('correct');
        score++;
      } else {
        quizBox.classList.add('wrong');
      }

      if(document.getElementById('autoNext').checked){
        autoAdvanceTimeout = setTimeout(() => { advanceToNext(); }, 700);
      }
    }

    function nextQuestion(){
      if(autoAdvanceTimeout){ clearTimeout(autoAdvanceTimeout); autoAdvanceTimeout = null; }
      if(timerInterval){ clearInterval(timerInterval); timerInterval = null; }

      if(!quizBox.classList.contains('correct') && !quizBox.classList.contains('wrong')){
        quizBox.classList.add('wrong');
        setTimeout(() => { advanceToNext(); }, 700);
      } else {
        setTimeout(() => { advanceToNext(); }, 200);
      }
    }

    function advanceToNext(){
      clearTimers();
      currentIndex++;
      loadQuestion();
    }

    function endQuiz(){
      clearTimers();
      questionEl.textContent = 'Quiz Completed!';
      optionsEl.innerHTML = '';
      nextBtn.style.display = 'none';
      restartBtn.style.display = 'block';
      timerEl.textContent = '';
      autoNextWrap.style.display = 'none';
      const outOf = (database.length >= MAX_QUESTIONS) ? MAX_QUESTIONS : QUESTIONS_PER_QUIZ;
      scoreBox.textContent = `Your Score: ${score} / ${outOf}`;
    }

    function restartQuiz(){
      clearTimers();
      quizBox.classList.remove('correct','wrong');
      scoreBox.textContent = '';
      startQuiz();
    }

    nextBtn.addEventListener('click', nextQuestion);
    restartBtn.addEventListener('click', restartQuiz);

    if(database.length < MAX_QUESTIONS){
      console.warn(`Database contains only ${database.length} items; quiz will use ${database.length} questions.`);
    }
    startQuiz();
  </script>
</body>
</html>
